AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >-
  This template creates API Gateway and Lambda resources for the backend service.
Parameters:
  S3BucketName:
    Type: String
    Description: GENERATED
  DynamoDbTableName:
    Type: String
  DynamoDbTableArn:
    Type: String
  Stage:
    Type: String
    Description: The stage where the application is running
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      OpenApiVersion: '3.0.0'
      Variables:
        DynamoDBTable: !Ref DynamoDbTableName
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: !Sub s3://${S3BucketName}/stack/post-manager/swagger.yaml
  APIGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
          Action: sts:AssumeRole
          Condition: {}
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
  PostMessagePermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PostMessageFunction.Arn
      Principal: apigateway.amazonaws.com
  UserDeletePermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt UserDeleteFunction.Arn
      Principal: apigateway.amazonaws.com
      #SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}
  PostMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      MemorySize: 128
      Handler: post_message.handler
      Policies:
      - Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource: !Ref DynamoDbTableArn
      CodeUri: .

  UserDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      Handler: index.handler
      InlineCode: |
        def handler(event, context):
          response = {
            'statusCode': 200,
            'body': 'Hello, Lambda Delete!'
          }
          return response
Outputs:
  Url:
    Description: Endpoint URL
    Value: !Sub 'https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${Stage}'
